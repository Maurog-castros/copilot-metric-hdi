# Configuración de Nginx con inyección de variables de entorno
server {
    listen 80;
    server_name localhost;
    
    # Directorio raíz donde están los archivos estáticos
    root /home/Apps/statics/copilot-metrics/public;
    index index.html;
    
    # Logs
    access_log /var/log/nginx/copilot-metrics.access.log;
    error_log /var/log/nginx/copilot-metrics.error.log;
    
    # Configuración de seguridad
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Configuración de caché para archivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Archivos HTML con caché corto
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Endpoint para configuración dinámica
    location /api/config {
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type";
        
        # Leer variables de entorno del contenedor
        return 200 '{
            "githubToken": "$GITHUB_TOKEN",
            "githubOrg": "$GITHUB_ORG",
            "scope": "$SCOPE",
            "isDataMocked": "$IS_DATA_MOCKED",
            "usingGithubAuth": "$USING_GITHUB_AUTH",
            "version": "$VERSION"
        }';
    }
    
    # Configuración para SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers de seguridad adicionales
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Favicon
    location /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Robots.txt
    location /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Páginas de error personalizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

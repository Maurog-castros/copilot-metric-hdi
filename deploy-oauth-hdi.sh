#!/bin/bash

# Script de despliegue para Copilot Metrics Viewer con OAuth en HDI
# Este script configura nginx correctamente para manejar las rutas OAuth

set -e

echo "üöÄ Iniciando despliegue de Copilot Metrics Viewer con OAuth..."

# Variables
NGINX_CONFIG="/etc/nginx/sites-available/copilot-metrics-oauth"
NGINX_ENABLED="/etc/nginx/sites-enabled/copilot-metrics-oauth"
DOCKER_COMPOSE_FILE="docker-compose.hdi.yml"
NGINX_CONFIG_FILE="nginx-oauth-hdi.conf"

# Verificar que estamos en el directorio correcto
if [ ! -f "$DOCKER_COMPOSE_FILE" ]; then
    echo "‚ùå Error: No se encontr√≥ $DOCKER_COMPOSE_FILE"
    echo "   Aseg√∫rate de ejecutar este script desde el directorio del proyecto"
    exit 1
fi

if [ ! -f "$NGINX_CONFIG_FILE" ]; then
    echo "‚ùå Error: No se encontr√≥ $NGINX_CONFIG_FILE"
    echo "   Aseg√∫rate de que el archivo de configuraci√≥n nginx existe"
    exit 1
fi

# Verificar que nginx est√° instalado
if ! command -v nginx &> /dev/null; then
    echo "‚ùå Error: nginx no est√° instalado"
    echo "   Instala nginx: sudo apt update && sudo apt install nginx"
    exit 1
fi

# Verificar que Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Error: Docker no est√° instalado"
    echo "   Instala Docker: https://docs.docker.com/engine/install/"
    exit 1
fi

# Verificar que Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Error: Docker Compose no est√° instalado"
    echo "   Instala Docker Compose: https://docs.docker.com/compose/install/"
    exit 1
fi

echo "‚úÖ Verificaciones de dependencias completadas"

# Detener servicios existentes
echo "üõë Deteniendo servicios existentes..."
sudo systemctl stop nginx 2>/dev/null || true
docker-compose -f $DOCKER_COMPOSE_FILE down 2>/dev/null || true

# Construir y levantar la aplicaci√≥n
echo "üî® Construyendo y levantando la aplicaci√≥n..."
docker-compose -f $DOCKER_COMPOSE_FILE build --no-cache
docker-compose -f $DOCKER_COMPOSE_FILE up -d

# Esperar a que la aplicaci√≥n est√© lista
echo "‚è≥ Esperando a que la aplicaci√≥n est√© lista..."
sleep 30

# Verificar que la aplicaci√≥n est√° funcionando
echo "üîç Verificando que la aplicaci√≥n est√© funcionando..."
if curl -f http://localhost:3000/health >/dev/null 2>&1; then
    echo "‚úÖ Aplicaci√≥n funcionando correctamente"
else
    echo "‚ùå Error: La aplicaci√≥n no est√° respondiendo en el puerto 3000"
    echo "   Revisa los logs: docker-compose -f $DOCKER_COMPOSE_FILE logs"
    exit 1
fi

# Configurar nginx
echo "üîß Configurando nginx..."

# Copiar configuraci√≥n de nginx
sudo cp $NGINX_CONFIG_FILE $NGINX_CONFIG

# Crear enlace simb√≥lico
sudo ln -sf $NGINX_CONFIG $NGINX_ENABLED

# Verificar configuraci√≥n de nginx
echo "üîç Verificando configuraci√≥n de nginx..."
if sudo nginx -t; then
    echo "‚úÖ Configuraci√≥n de nginx v√°lida"
else
    echo "‚ùå Error: Configuraci√≥n de nginx inv√°lida"
    echo "   Revisa el archivo: $NGINX_CONFIG"
    exit 1
fi

# Reiniciar nginx
echo "üîÑ Reiniciando nginx..."
sudo systemctl restart nginx
sudo systemctl enable nginx

# Verificar que nginx est√° funcionando
echo "üîç Verificando que nginx est√© funcionando..."
if sudo systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx funcionando correctamente"
else
    echo "‚ùå Error: Nginx no est√° funcionando"
    echo "   Revisa los logs: sudo journalctl -u nginx"
    exit 1
fi

# Verificar que las rutas OAuth funcionan
echo "üîç Verificando rutas OAuth..."
if curl -f http://localhost/auth/github >/dev/null 2>&1; then
    echo "‚úÖ Ruta OAuth funcionando correctamente"
else
    echo "‚ö†Ô∏è  Advertencia: Ruta OAuth no responde (esto es normal si no hay HTTPS)"
    echo "   En producci√≥n, aseg√∫rate de configurar HTTPS"
fi

# Verificar que la aplicaci√≥n principal funciona
echo "üîç Verificando aplicaci√≥n principal..."
if curl -f http://localhost/ >/dev/null 2>&1; then
    echo "‚úÖ Aplicaci√≥n principal funcionando correctamente"
else
    echo "‚ùå Error: Aplicaci√≥n principal no responde"
    echo "   Revisa los logs: docker-compose -f $DOCKER_COMPOSE_FILE logs"
    exit 1
fi

echo ""
echo "üéâ ¬°Despliegue completado exitosamente!"
echo ""
echo "üìã Resumen del despliegue:"
echo "   ‚Ä¢ Aplicaci√≥n: http://localhost/"
echo "   ‚Ä¢ Health check: http://localhost/health"
echo "   ‚Ä¢ Ruta OAuth: http://localhost/auth/github"
echo "   ‚Ä¢ Configuraci√≥n nginx: $NGINX_CONFIG"
echo ""
echo "üîß Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs de la aplicaci√≥n: docker-compose -f $DOCKER_COMPOSE_FILE logs -f"
echo "   ‚Ä¢ Ver logs de nginx: sudo tail -f /var/log/nginx/copilot-metrics-oauth.access.log"
echo "   ‚Ä¢ Reiniciar aplicaci√≥n: docker-compose -f $DOCKER_COMPOSE_FILE restart"
echo "   ‚Ä¢ Reiniciar nginx: sudo systemctl restart nginx"
echo ""
echo "‚ö†Ô∏è  Nota: Para producci√≥n, aseg√∫rate de:"
echo "   ‚Ä¢ Configurar HTTPS con certificados SSL"
echo "   ‚Ä¢ Actualizar el server_name en nginx-oauth-hdi.conf"
echo "   ‚Ä¢ Configurar firewall para permitir puertos 80 y 443"
echo "   ‚Ä¢ Verificar que las URLs de callback OAuth coincidan"
